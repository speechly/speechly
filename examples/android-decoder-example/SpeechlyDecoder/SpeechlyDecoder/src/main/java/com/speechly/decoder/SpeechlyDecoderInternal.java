/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.speechly.decoder;

public class SpeechlyDecoderInternal implements SpeechlyDecoderInternalConstants {
  public static DecoderFactoryHandle DecoderFactory_CreateFromModelArchive(java.nio.ByteBuffer buf, long buf_len) throws com.speechly.decoder.DecoderException {
  assert buf.isDirect() : "Buffer must be allocated direct.";
    {
      long cPtr = SpeechlyDecoderInternalJNI.DecoderFactory_CreateFromModelArchive(buf, buf_len);
      return (cPtr == 0) ? null : new DecoderFactoryHandle(cPtr, false);
    }
  }

  public static DecoderHandle DecoderFactory_GetDecoder(DecoderFactoryHandle handle, String device_id) throws com.speechly.decoder.DecoderException {
    long cPtr = SpeechlyDecoderInternalJNI.DecoderFactory_GetDecoder(DecoderFactoryHandle.getCPtr(handle), handle, device_id);
    return (cPtr == 0) ? null : new DecoderHandle(cPtr, false);
  }

  public static String DecoderFactory_GetAppId(DecoderFactoryHandle handle) throws com.speechly.decoder.DecoderException {
    return SpeechlyDecoderInternalJNI.DecoderFactory_GetAppId(DecoderFactoryHandle.getCPtr(handle), handle);
  }

  public static String DecoderFactory_GetBundleId(DecoderFactoryHandle handle) throws com.speechly.decoder.DecoderException {
    return SpeechlyDecoderInternalJNI.DecoderFactory_GetBundleId(DecoderFactoryHandle.getCPtr(handle), handle);
  }

  public static void DecoderFactory_SetSegmentationDelay(DecoderFactoryHandle handle, int milliseconds) throws com.speechly.decoder.DecoderException {
    SpeechlyDecoderInternalJNI.DecoderFactory_SetSegmentationDelay(DecoderFactoryHandle.getCPtr(handle), handle, milliseconds);
  }

  public static void DecoderFactory_SetBoostVocabulary(DecoderFactoryHandle handle, String vocabulary, float weight) throws com.speechly.decoder.DecoderException {
    SpeechlyDecoderInternalJNI.DecoderFactory_SetBoostVocabulary(DecoderFactoryHandle.getCPtr(handle), handle, vocabulary, weight);
  }

  public static void Decoder_WriteSamples(DecoderHandle handle, float[] samples, long samples_size, int end_of_input) throws com.speechly.decoder.DecoderException {
    SpeechlyDecoderInternalJNI.Decoder_WriteSamples(DecoderHandle.getCPtr(handle), handle, samples, samples_size, end_of_input);
  }

  public static CResultWord Decoder_WaitResults(DecoderHandle handle) throws com.speechly.decoder.DecoderException {
    long cPtr = SpeechlyDecoderInternalJNI.Decoder_WaitResults(DecoderHandle.getCPtr(handle), handle);
    return (cPtr == 0) ? null : new CResultWord(cPtr, false);
  }

  public static CResultWord Decoder_GetResults(DecoderHandle handle) throws com.speechly.decoder.DecoderException {
    long cPtr = SpeechlyDecoderInternalJNI.Decoder_GetResults(DecoderHandle.getCPtr(handle), handle);
    return (cPtr == 0) ? null : new CResultWord(cPtr, false);
  }

  public static void Decoder_SetInputSampleRate(DecoderHandle handle, int sample_rate) throws com.speechly.decoder.DecoderException {
    SpeechlyDecoderInternalJNI.Decoder_SetInputSampleRate(DecoderHandle.getCPtr(handle), handle, sample_rate);
  }

  public static void Decoder_EnableVAD(DecoderHandle handle, int enabled) throws com.speechly.decoder.DecoderException {
    SpeechlyDecoderInternalJNI.Decoder_EnableVAD(DecoderHandle.getCPtr(handle), handle, enabled);
  }

  public static int Decoder_GetParamI(DecoderHandle handle, long param_id) throws com.speechly.decoder.DecoderException {
    return SpeechlyDecoderInternalJNI.Decoder_GetParamI(DecoderHandle.getCPtr(handle), handle, param_id);
  }

  public static void Decoder_SetParamI(DecoderHandle handle, long param_id, int value) throws com.speechly.decoder.DecoderException {
    SpeechlyDecoderInternalJNI.Decoder_SetParamI(DecoderHandle.getCPtr(handle), handle, param_id, value);
  }

  public static float Decoder_GetParamF(DecoderHandle handle, long param_id) throws com.speechly.decoder.DecoderException {
    return SpeechlyDecoderInternalJNI.Decoder_GetParamF(DecoderHandle.getCPtr(handle), handle, param_id);
  }

  public static void Decoder_SetParamF(DecoderHandle handle, long param_id, float value) throws com.speechly.decoder.DecoderException {
    SpeechlyDecoderInternalJNI.Decoder_SetParamF(DecoderHandle.getCPtr(handle), handle, param_id, value);
  }

  public static int Decoder_GetNumSamples(DecoderHandle handle) {
    return SpeechlyDecoderInternalJNI.Decoder_GetNumSamples(DecoderHandle.getCPtr(handle), handle);
  }

  public static int Decoder_GetNumVoiceSamples(DecoderHandle handle) {
    return SpeechlyDecoderInternalJNI.Decoder_GetNumVoiceSamples(DecoderHandle.getCPtr(handle), handle);
  }

  public static int Decoder_GetNumCharacters(DecoderHandle handle) {
    return SpeechlyDecoderInternalJNI.Decoder_GetNumCharacters(DecoderHandle.getCPtr(handle), handle);
  }

  public static String SpeechlyDecoderVersion() {
    return SpeechlyDecoderInternalJNI.SpeechlyDecoderVersion();
  }

  public static long SpeechlyDecoderBuild() {
    return SpeechlyDecoderInternalJNI.SpeechlyDecoderBuild();
  }

  public static void CResultWord_Destroy(CResultWord result_word) {
    SpeechlyDecoderInternalJNI.CResultWord_Destroy(CResultWord.getCPtr(result_word), result_word);
  }

  public static void DecoderFactory_Destroy(DecoderFactoryHandle handle) {
    SpeechlyDecoderInternalJNI.DecoderFactory_Destroy(DecoderFactoryHandle.getCPtr(handle), handle);
  }

  public static void Decoder_Destroy(DecoderHandle handle) {
    SpeechlyDecoderInternalJNI.Decoder_Destroy(DecoderHandle.getCPtr(handle), handle);
  }

}
